<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.box.auth.dao.AuthUserDao">
    <!--使用自定义的缓存 -->
    <cache type="com.box.utils.MybatisRedisCache"/>  
    
   	<sql id="allColumn">id,user_name,password,del_,version_</sql>
   	<sql id="desColumn">id,user_name,del_,version_</sql>
    <sql id="requirement">1=1 and del_=0</sql>
    <sql id="fromName">auth_user</sql>
    
    <insert id="addRoleBatch">
        insert into auth_user_role
        (user_id,role_id) 
        values
        <foreach collection="roleIds" item="roleId" separator=",">
      		(#{userId},#{roleId})
      	</foreach>
    </insert>
    
    <delete id="removeRoleBatch">
        delete from auth_user_role 
        where user_id=#{userId} and role_id in(
        <foreach collection="roleIds" item="roleId" separator=",">
      		#{roleId}
      	</foreach>
      	)
    </delete>
    
    <select id="findByRoleId" resultType="com.box.auth.pojo.AuthUser" >
        select <include refid="desColumn"/> 
        from <include refid="fromName"/> t
        where <include refid="requirement"/>
        and exists(select * from auth_user_role tt where t.id=tt.user_id and tt.role_id=#{role_id})
    </select>
    
    <select id="findByPermissionsId" resultType="com.box.auth.pojo.AuthUser" >
        select <include refid="desColumn"/> 
        from <include refid="fromName"/> t
        where <include refid="requirement"/>
        and exists(select * from auth_user_role tt where t.id=tt.user_id 
        and exists(select * from auth_role_permissions ttt where tt.role_id=ttt.role_id and ttt.permissions_id=#{permissions_id})
        )
    </select>
</mapper>
